local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TopBar = Instance.new("Frame")
local TabsHolder = Instance.new("Frame")
local TabContainer = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")

-- Protect GUI for Executors
if syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
elseif gethui then
    ScreenGui.Parent = gethui()
else
    ScreenGui.Parent = game.CoreGui
end

-- ScreenGui Properties
ScreenGui.Name = "ImprovedUILibrary"
ScreenGui.ResetOnSpawn = false

-- Toggle Button
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.Position = UDim2.new(0.05, 0, 0.85, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(70, 140, 255)
ToggleButton.Text = "â˜°"
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 20

local ToggleCorner = Instance.new("UICorner", ToggleButton)
ToggleCorner.CornerRadius = UDim.new(1, 0)

-- Main Frame
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.Size = UDim2.new(0, 450, 0, 300)
MainFrame.Position = UDim2.new(0.5, -225, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.Visible = false
MainFrame.ClipsDescendants = true

UICorner.Parent = MainFrame
UICorner.CornerRadius = UDim.new(0, 15)

-- Top Bar
TopBar.Name = "TopBar"
TopBar.Parent = MainFrame
TopBar.Size = UDim2.new(1, 0, 0, 40)
TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local TopBarCorner = Instance.new("UICorner", TopBar)
TopBarCorner.CornerRadius = UDim.new(0, 15)

-- Tabs Holder
TabsHolder.Name = "TabsHolder"
TabsHolder.Parent = MainFrame
TabsHolder.Size = UDim2.new(0, 80, 1, -40)
TabsHolder.Position = UDim2.new(0, 0, 0, 40)
TabsHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

local TabsCorner = Instance.new("UICorner", TabsHolder)
TabsCorner.CornerRadius = UDim.new(0, 10)

UIListLayout.Parent = TabsHolder
UIListLayout.FillDirection = Enum.FillDirection.Vertical
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

-- Tab Container
TabContainer.Name = "TabContainer"
TabContainer.Parent = MainFrame
TabContainer.Size = UDim2.new(1, -80, 1, -40)
TabContainer.Position = UDim2.new(0, 80, 0, 40)
TabContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)

local TabCorner = Instance.new("UICorner", TabContainer)
TabCorner.CornerRadius = UDim.new(0, 10)

-- Drag Functionality
local function makeDraggable(frame, handle)
    local dragging = false
    local dragInput, mousePos, framePos

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    handle.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - mousePos
            frame.Position = UDim2.new(
                framePos.X.Scale,
                framePos.X.Offset + delta.X,
                framePos.Y.Scale,
                framePos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Apply Draggable
makeDraggable(MainFrame, TopBar)
makeDraggable(ToggleButton, ToggleButton)

-- Toggle Functionality
ToggleButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

-- Example Tab Creation
local function createTab(name)
    local TabButton = Instance.new("TextButton")
    TabButton.Name = name .. "Button"
    TabButton.Parent = TabsHolder
    TabButton.Size = UDim2.new(1, -10, 0, 40)
    TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    TabButton.Text = name
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.TextSize = 18
    TabButton.Font = Enum.Font.Gotham

    local TabFrame = Instance.new("Frame")
    TabFrame.Name = name .. "Frame"
    TabFrame.Parent = TabContainer
    TabFrame.Size = UDim2.new(1, 0, 1, 0)
    TabFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabFrame.Visible = false

    local TabUICorner = Instance.new("UICorner", TabFrame)
    TabUICorner.CornerRadius = UDim.new(0, 10)

    TabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(TabContainer:GetChildren()) do
            if frame:IsA("Frame") then
                frame.Visible = false
            end
        end
        TabFrame.Visible = true
    end)

    return TabFrame
end



-- Define Tap buttons with toggle functionality
local currentTap = 1  -- Default selected Tap

local function createTapButton(index, label, callback)
    local button = Instance.new("TextButton")
    button.Text = label
    button.BackgroundColor3 = index == currentTap and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(50, 50, 50)
    button.MouseButton1Click:Connect(function()
        currentTap = index
        callback()
    end)
    return button
end

-- Toggle switch module
local function createToggleSwitch()
    local toggle = Instance.new("Frame")
    local switch = Instance.new("TextButton")
    local isOn = false

    switch.Text = "Off"
    switch.MouseButton1Click:Connect(function()
        isOn = not isOn
        switch.Text = isOn and "On" or "Off"
        switch.BackgroundColor3 = isOn and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    end)

    toggle:AddChild(switch)
    return toggle
end

-- Input text module
local function createInputField()
    local inputField = Instance.new("TextBox")
    inputField.PlaceholderText = "Input text"
    return inputField
end

-- Dropdown module
local function createDropdown(options)
    local dropdown = Instance.new("Frame")
    local button = Instance.new("TextButton")
    button.Text = "Select"
    dropdown:AddChild(button)
    
    for _, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Text = option
        optionButton.MouseButton1Click:Connect(function()
            button.Text = option
        end)
        dropdown:AddChild(optionButton)
    end
    return dropdown
end

-- Slider module
local function createSlider()
    local slider = Instance.new("Frame")
    local valueDisplay = Instance.new("TextLabel")
    valueDisplay.Text = "0"

    local sliderInput = Instance.new("TextButton")
    sliderInput.MouseButton1Click:Connect(function()
        -- Logic to update slider value
    end)

    slider:AddChild(valueDisplay)
    slider:AddChild(sliderInput)
    return slider
end
