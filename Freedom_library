local OrionLibrary = {}

function OrionLibrary:CreateWindow(windowTitle)
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local TabsContainer = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local Tabs = {}

    -- ScreenGui
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.Name = "OrionUI"

    -- MainFrame
    MainFrame.Parent = ScreenGui
    MainFrame.Size = UDim2.new(0.35, 0, 0.6, 0)
    MainFrame.Position = UDim2.new(0.325, 0, 0.2, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0

    -- Title
    Title.Parent = MainFrame
    Title.Size = UDim2.new(1, 0, 0.1, 0)
    Title.Text = windowTitle
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

    -- TabsContainer
    TabsContainer.Parent = MainFrame
    TabsContainer.Size = UDim2.new(0.2, 0, 0.9, 0)
    TabsContainer.Position = UDim2.new(0, 0, 0.1, 0)
    TabsContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabsContainer.BorderSizePixel = 0

    -- UIListLayout for Tabs
    UIListLayout.Parent = TabsContainer
    UIListLayout.FillDirection = Enum.FillDirection.Vertical
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Return the Window
    local Window = {
        MainFrame = MainFrame,
        TabsContainer = TabsContainer,
        Tabs = Tabs
    }
    setmetatable(Window, { __index = self })
    return Window
end

function OrionLibrary:CreateTab(tabName)
    local TabButton = Instance.new("TextButton")
    TabButton.Parent = self.TabsContainer
    TabButton.Size = UDim2.new(1, 0, 0.1, 0)
    TabButton.Text = tabName
    TabButton.Font = Enum.Font.Gotham
    TabButton.TextSize = 16
    TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.BorderSizePixel = 0

    -- Add Tab Page
    local TabPage = Instance.new("ScrollingFrame")
    TabPage.Parent = self.MainFrame
    TabPage.Size = UDim2.new(0.8, 0, 0.9, 0)
    TabPage.Position = UDim2.new(0.2, 0, 0.1, 0)
    TabPage.BackgroundTransparency = 1
    TabPage.Visible = false

    -- Tab Button Functionality
    TabButton.MouseButton1Click:Connect(function()
        for _, tab in pairs(self.Tabs) do
            tab.TabPage.Visible = false
        end
        TabPage.Visible = true
    end)

    -- Register Tab
    table.insert(self.Tabs, {
        TabButton = TabButton,
        TabPage = TabPage
    })

    return TabPage
end

function OrionLibrary:CreateToggle(parent, toggleName, callback)
    local Toggle = Instance.new("Frame")
    local Label = Instance.new("TextLabel")
    local Switch = Instance.new("TextButton")
    local Toggled = false

    -- Toggle Container
    Toggle.Parent = parent
    Toggle.Size = UDim2.new(1, 0, 0.1, 0)
    Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

    -- Label
    Label.Parent = Toggle
    Label.Size = UDim2.new(0.8, 0, 1, 0)
    Label.Text = toggleName
    Label.Font = Enum.Font.Gotham
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)

    -- Switch Button
    Switch.Parent = Toggle
    Switch.Size = UDim2.new(0.2, 0, 1, 0)
    Switch.Position = UDim2.new(0.8, 0, 0, 0)
    Switch.Text = "Off"
    Switch.BackgroundColor3 = Color3.fromRGB(128, 128, 128)

    -- Toggle Functionality
    Switch.MouseButton1Click:Connect(function()
        Toggled = not Toggled
        Switch.Text = Toggled and "On" or "Off"
        Switch.BackgroundColor3 = Toggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        callback(Toggled)
    end)
end

return OrionLibrary