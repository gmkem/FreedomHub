local FreedomHub = {}

-- UI Initialization
FreedomHub.__index = FreedomHub
FreedomHub.MainGui = nil

function FreedomHub:Initialize()
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FreedomHub"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    self.MainGui = screenGui
end

function FreedomHub:MakeWindow(config)
    config = config or {}
    local name = config.Name or "Freedom Hub"
    
    -- Create Main Window
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = self.MainGui

    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Text = name
    title.Size = UDim2.new(1, 0, 0, 50)
    title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.SourceSansBold
    title.TextScaled = true
    title.Parent = mainFrame

    return mainFrame
end

function FreedomHub:CreateTab(parent, tabName)
    local tabFrame = Instance.new("Frame")
    tabFrame.Name = tabName or "Tab"
    tabFrame.Size = UDim2.new(1, 0, 1, -50)
    tabFrame.Position = UDim2.new(0, 0, 0, 50)
    tabFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabFrame.Visible = true
    tabFrame.Parent = parent

    return tabFrame
end

function FreedomHub:AddButton(tab, config)
    local button = Instance.new("TextButton")
    button.Name = config.Name or "Button"
    button.Text = config.Name or "Button"
    button.Size = UDim2.new(1, -20, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 10)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextScaled = true
    button.Parent = tab

    button.MouseButton1Click:Connect(function()
        if config.Callback then
            pcall(config.Callback)
        end
    end)
end

function FreedomHub:AddToggle(tab, config)
    local frame = Instance.new("Frame")
    frame.Name = config.Name or "Toggle"
    frame.Size = UDim2.new(1, -20, 0, 40)
    frame.Position = UDim2.new(0, 10, 0, 60)
    frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    frame.Parent = tab

    local toggle = Instance.new("TextButton")
    toggle.Name = "Toggle"
    toggle.Size = UDim2.new(0, 30, 0, 30)
    toggle.Position = UDim2.new(0, 5, 0, 5)
    toggle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    toggle.Parent = frame

    local label = Instance.new("TextLabel")
    label.Text = config.Name or "Toggle"
    label.Size = UDim2.new(1, -40, 1, 0)
    label.Position = UDim2.new(0, 40, 0, 0)
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.SourceSans
    label.TextScaled = true
    label.Parent = frame

    local isToggled = false

    toggle.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        toggle.BackgroundColor3 = isToggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        if config.Callback then
            pcall(config.Callback, isToggled)
        end
    end)
end

function FreedomHub:AddDropdown(tab, config)
    local dropdown = Instance.new("Frame")
    dropdown.Name = config.Name or "Dropdown"
    dropdown.Size = UDim2.new(1, -20, 0, 40)
    dropdown.Position = UDim2.new(0, 10, 0, 110)
    dropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    dropdown.Parent = tab

    local dropdownText = Instance.new("TextLabel")
    dropdownText.Text = config.Name or "Dropdown"
    dropdownText.Size = UDim2.new(1, -20, 1, 0)
    dropdownText.Position = UDim2.new(0, 10, 0, 0)
    dropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownText.BackgroundTransparency = 1
    dropdownText.Font = Enum.Font.SourceSans
    dropdownText.TextScaled = true
    dropdownText.Parent = dropdown
end

-- Initialize Library
FreedomHub:Initialize()
return FreedomHub