local UILibrary = {}

-- สร้างหน้าต่างหลัก
function UILibrary:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")

    ScreenGui.Name = "CustomUILibrary"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    MainFrame.Size = UDim2.new(0.4, 0, 0.6, 0)
    MainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    MainFrame.Parent = ScreenGui

    Title.Size = UDim2.new(1, 0, 0.1, 0)
    Title.Position = UDim2.new(0, 0, 0, 0)
    Title.Text = title or "UI Library"
    Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.GothamBold
    Title.TextScaled = true
    Title.Parent = MainFrame

    return { ScreenGui = ScreenGui, MainFrame = MainFrame }
end

-- Toggle (เปิด/ปิด)
function UILibrary:CreateToggle(parent, labelText, callback)
    local ToggleFrame = Instance.new("Frame")
    local Label = Instance.new("TextLabel")
    local ToggleButton = Instance.new("TextButton")
    local UICorner = Instance.new("UICorner")

    ToggleFrame.Size = UDim2.new(0.9, 0, 0.1, 0)
    ToggleFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ToggleFrame.Parent = parent

    Label.Size = UDim2.new(0.7, 0, 1, 0)
    Label.Position = UDim2.new(0, 10, 0, 0)
    Label.Text = labelText or "Toggle"
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.BackgroundTransparency = 1
    Label.Font = Enum.Font.Gotham
    Label.TextScaled = true
    Label.Parent = ToggleFrame

    ToggleButton.Size = UDim2.new(0.2, 0, 0.8, 0)
    ToggleButton.Position = UDim2.new(0.75, 0, 0.1, 0)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    ToggleButton.Text = "Off"
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Font = Enum.Font.Gotham
    ToggleButton.TextScaled = true
    ToggleButton.Parent = ToggleFrame

    UICorner.CornerRadius = UDim.new(0.05, 0)
    UICorner.Parent = ToggleButton

    local isOn = false
    ToggleButton.MouseButton1Click:Connect(function()
        isOn = not isOn
        ToggleButton.Text = isOn and "On" or "Off"
        ToggleButton.BackgroundColor3 = isOn and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
        if callback then callback(isOn) end
    end)
end

-- Slider (เลื่อนค่า)
function UILibrary:CreateSlider(parent, labelText, minValue, maxValue, callback)
    local SliderFrame = Instance.new("Frame")
    local Label = Instance.new("TextLabel")
    local SliderBar = Instance.new("Frame")
    local SliderKnob = Instance.new("ImageButton")

    SliderFrame.Size = UDim2.new(0.9, 0, 0.1, 0)
    SliderFrame.Position = UDim2.new(0.05, 0, 0.25, 0)
    SliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    SliderFrame.Parent = parent

    Label.Size = UDim2.new(0.3, 0, 1, 0)
    Label.Position = UDim2.new(0, 10, 0, 0)
    Label.Text = labelText or "Slider"
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.BackgroundTransparency = 1
    Label.Font = Enum.Font.Gotham
    Label.TextScaled = true
    Label.Parent = SliderFrame

    SliderBar.Size = UDim2.new(0.5, 0, 0.2, 0)
    SliderBar.Position = UDim2.new(0.35, 0, 0.4, 0)
    SliderBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    SliderBar.Parent = SliderFrame

    SliderKnob.Size = UDim2.new(0, 15, 0, 15)
    SliderKnob.Position = UDim2.new(0, 0, -0.25, 0)
    SliderKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SliderKnob.Parent = SliderBar

    local function updateSlider(input)
        local x = math.clamp(input.Position.X, SliderBar.AbsolutePosition.X, SliderBar.AbsolutePosition.X + SliderBar.AbsoluteSize.X)
        local percentage = (x - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X
        local value = math.floor(minValue + ((maxValue - minValue) * percentage))
        SliderKnob.Position = UDim2.new(percentage, -7, -0.25, 0)
        if callback then callback(value) end
    end

    SliderKnob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local conn
            conn = game:GetService("UserInputService").InputChanged:Connect(function(input2)
                if input2.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input2)
                end
            end)
            input.InputEnded:Connect(function()
                conn:Disconnect()
            end)
        end
    end)
end

return UILibrary
